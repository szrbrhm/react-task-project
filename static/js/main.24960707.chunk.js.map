{"version":3,"sources":["store/initialState.js","components/Button/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/CreateTask.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","id","text","day","isDone","Button","color","toggleShow","className","style","backgroundColor","onClick","Header","title","isTaskBarShowed","Task","task","onDelete","toggleDone","onDoubleClick","cursor","Tasks","tasks","map","CreateTask","onCreate","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","name","type","placeholder","value","onChange","target","App","setTasks","setIsTaskBarShow","prevState","Date","now","newTask","length","deletedItemId","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24960707.chunk.js","sourcesContent":["export const initialState = [\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      day: \"Feb 5th at 2:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      day: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      day: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n];","import React from 'react';\r\n\r\nfunction Button({text, color, toggleShow}) {\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" style={{backgroundColor: color}} onClick={toggleShow}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button/Button';\r\n\r\n\r\nfunction Header({title, toggleShow, isTaskBarShowed }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={isTaskBarShowed ? \"steelblue\" : \"purple\"} \r\n            text={isTaskBarShowed ? \"Hide Create a Task Bar\" : \"Show Create a Task Bar\"} toggleShow={toggleShow}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\n// Header.defaultProps = {\r\n//     title: 'Task Tracker as Default'\r\n//   }\r\n\r\n// Header.propTypes = {\r\n//     title: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, toggleDone }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n      onDoubleClick={() => toggleDone(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","\r\nimport Task from \"./Task\";\r\n\r\nfunction Tasks({tasks, onDelete, toggleDone}) {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} toggleDone={toggleDone}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction CreateTask({ onCreate }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => setText(e.target.value);\r\n  const handleDayChange = (e) => setDay(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text || !day) {\r\n      alert(\"Please fill both field\");\r\n    } else {\r\n      onCreate({ text, day, isDone: false });\r\n      setText(\"\");\r\n      setDay(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a task name\"\r\n            // required\r\n              value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"day\">Day & Time</label>\r\n          <input\r\n            id=\"day\"\r\n            name=\"day\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a day and time\"\r\n            // required\r\n              value={day}\r\n            onChange={handleDayChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { useState } from \"react\";\nimport { initialState } from \"./store/initialState\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport CreateTask from \"./components/CreateTask\";\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShow] = useState(false);\n\n  // Create a task\n\n  const onCreate = (task) => {\n    const id = Date.now();\n    const newTask = { id, ...task };\n    setTasks((prevState) => [...prevState, newTask]);\n  };\n\n  // Delete Task\n  const onDelete = (deletedItemId) =>\n    setTasks(tasks.filter((task) => task.id !== deletedItemId));\n\n  // Toggle Done\n\n  const toggleDone = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  };\n\n  // Toggle Show and hide\n\n  const toggleShow = () => setIsTaskBarShow(prevState => !prevState)\n\n  return (\n    <div className=\"container\">\n      <Header title={\"Task Tracker\"} isTaskBarShowed={isTaskBarShowed} toggleShow={toggleShow}/>\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />\n      ) : (\n        <p>No Task to show</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}